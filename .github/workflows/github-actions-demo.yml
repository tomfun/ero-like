name: minimal tests & build
on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: npm

      - run: |
          cd api
          npm ci
          npm run build --if-present
          npm run lint
        #       npm test

      - run: |
          cd my-vue3-app
          npm ci
          npm run lint
          npm run build --if-present
#       npm test

  docker-build-nginx:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: npm
      - run: |
          cd my-vue3-app
          mkdir public/.wtf/
          echo ${{ github.ref_name }} > public/.wtf/D_I_TAG_UNIQ
          echo ${{ github.sha }} >> public/.wtf/D_I_TAG_UNIQ
          cat public/.wtf/D_I_TAG_UNIQ
          npm --loglevel error --color=always install
          npm --loglevel error --color=always run build
          cd ..

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.HUB_DOCKER_USER }}
          password: ${{ secrets.HUB_DOCKER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push static
        id: docker_build_nginx
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./docker/nginx/local-copy.Dockerfile
          push: true
          pull: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ${{ secrets.HUB_DOCKER_USER }}/ero-like-nginx:${{ github.ref_name }}
            ${{ secrets.HUB_DOCKER_USER }}/ero-like-nginx:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=https://github.com/tomfun/ero-like
            org.opencontainers.image.licenses=MIT
#            LABEL org.opencontainers.image.documentation=https://i2pd.readthedocs.io/en/latest/
      - name: Image digest
        run: echo ${{ steps.docker_build_nginx.outputs.digest }}

  docker-build-api:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.HUB_DOCKER_USER }}
          password: ${{ secrets.HUB_DOCKER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push API
        id: docker_build_api
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./docker/api/Dockerfile
          push: true
          pull: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ${{ secrets.HUB_DOCKER_USER }}/ero-like-api:${{ github.ref_name }}
            ${{ secrets.HUB_DOCKER_USER }}/ero-like-api:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=https://github.com/tomfun/ero-like
            org.opencontainers.image.licenses=MIT

      - name: Image digest
        run: echo ${{ steps.docker_build_api.outputs.digest }}
