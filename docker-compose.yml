version: '3'
services:
  postgres:
    image: postgres:14.6
    user: ${uid:-999}:${gid:-999}
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: user
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/postgres
    volumes:
      - ./docker/data/postgres:/var/lib/postgresql/data

  api:
#    image: node:18.15-alpine3.17
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    user: ${uid:-1000}:${gid:-1000}
    ports:
      - 3000:3000
      - 9229:9229
    environment:
      #      DEBUG: '*'
      ENVIRONMENT: local
      VERSION: n/a
      ADDRESS: 0.0.0.0
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: user
      LOG: ""
      PORT: "3000"
      PUBLIC_URL: 'http://localhost:3000'
      SENTRY_DISABLE: '1'
      TRUST_PROXY: '0'
      CLUSTER_WORKERS: 0

    #   command: node --trace-warnings --enable-source-maps dist/src/main
    #    command: npm run start:dev
    #    command: node --inspect-brk=0.0.0.0:9229 -r tsconfig-paths/register -r ts-node/register ts/src/main.ts
    command: npm run start:debug
    working_dir: /ero-like/api
    depends_on:
      - postgres
    volumes:
      - ./api:/ero-like/api
      - ./client-sdk:/ero-like/client-sdk
      - ./client-config:/ero-like/client-config
#      - ./docker/data/gpg/.gnupg2:/root/.gnupg
      - ./docker/data/gpg:/root

  frontend:
    image: node:18
    ports:
      - 3001:3001
    command: npm run vite
    working_dir: /ero-like/frontend
    environment:
      IS_DOCKER_COMPOSE: 1
    depends_on:
      - api
    volumes:
      - ./client-sdk:/ero-like/client-sdk
      - ./client-config:/ero-like/client-config
      - ./frontend:/ero-like/frontend
